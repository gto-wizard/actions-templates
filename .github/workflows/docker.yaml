name: Docker

# on:
#   push:
#     branches: [ $default-branch ]
#     # Publish semver tags as releases.
#     tags: [ 'v*.*.*' ]
#   pull_request:
#     branches: [ $default-branch ]

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        required: true
        type: string
        description: name for the image
      DOCKER_PLATFORMS:
        type: string
        default: "linux/amd64,linux/arm64"
        description: List of target platforms for build
      DOCKER_CONTEXT:
        type: string
        default: "."
        description: Build's context is the set of files located in the specified PATH or URL
      DOCKER_FILE:
        type: string
        default: "./Dockerfile"
        description: Path to the Dockerfile
      DOCKER_BUILD_ARGS:
        type: string
        description: List of build-time variables ## Ref: https://docs.docker.com/reference/cli/docker/buildx/build/#build-arg
        ## example: SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

        ## TODO use organization variables for AWS data

env:
  ECR_REGISTRY: 277064527133.dkr.ecr.eu-central-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::277064527133:role/github-actions"
          aws-region: "eu-central-1"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      ## Install QEMU static binaries for cross platform docker build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ inputs.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ref=${{ env.ECR_REGISTRY }}/cache:${{ inputs.IMAGE_NAME }},type=registry
          cache-to: ref=${{ env.ECR_REGISTRY }}/cache:${{ inputs.IMAGE_NAME }},type=registry,mode=max,image-manifest=true,oci-mediatypes=true
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ inputs.DOCKER_FILE }}
          platforms: ${{ inputs.DOCKER_PLATFORMS }}
          build-args: ${{ inputs.DOCKER_BUILD_ARGS }}
