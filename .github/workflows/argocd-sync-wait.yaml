name: argocd-sync-wait

on:
  workflow_call:
    inputs:
      BUILD_RUNNER_LABEL:
        type: string
        default: ubuntu-latest
        description: Routes jobs to runners with this label.
      ARGOCD_SERVER_URL:
        type: string
        default: argocd.services.gtowiz.com
        description: Argocd server endpoint url.
      ARGOCD_VERSION:
        type: string
        default: v2.14.11
        description: argocd cli version.
      ARGOCD_APP_NAME:
        type: string
        required: true
        description: Argocd app name.
      WAIT_TIMEOUT_SECONDS:
        type: number
        default: 600
        description: Timeout in seconds for argocd wait
    secrets:
      ARGOCD_AUTH_TOKEN:
        description: Argocd cli user auth token

jobs:
  argocd-sync-wait:
    name: ðŸ—˜ Argocd sync and wait
    runs-on: ${{ inputs.BUILD_RUNNER_LABEL }}
    steps:
      # - name: Cache argocd binary
      #   uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # pin@v4
      #   with:
      #     path: /usr/local/bin/argocd
      #     key: argocd-${{ inputs.ARGOCD_VERSION }}

      - name: Download argocd binary
        run: |
          # for latest version
          # ARGOCD_VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"s]+)".*/\1/' )

          curl -sL --create-dirs  -o ~/.local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/${{ inputs.ARGOCD_VERSION }}/argocd-linux-amd64
          chmod +x ~/.local/bin/argocd

      - name: Run argocd sync
        run: argocd --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --server "${{ inputs.ARGOCD_SERVER_URL}}" --grpc-web app sync "${{ inputs.ARGOCD_APP_NAME }}"

      - name: Run argocd wait
        run: argocd --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --server "${{ inputs.ARGOCD_SERVER_URL}}" --grpc-web app wait --timeout 60 "${{ inputs.ARGOCD_APP_NAME }}"
