name: Multi-arch-build-qemu

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        required: true
        type: string
        description: name for the image
      DOCKER_PLATFORMS:
        type: string
        default: "linux/amd64,linux/arm64"
        description: List of target platforms for build
      DOCKER_CONTEXT:
        type: string
        default: "."
        description: Build's context is the set of files located in the specified PATH or URL
      DOCKER_FILE:
        type: string
        default: "./Dockerfile"
        description: Path to the Dockerfile
      DOCKER_PUSH:
        type: boolean
        default: true
        description: Push the build result to registry
      DOCKER_BUILD_ARGS:
        type: string
        description: List of build-time variables ## Ref: https://docs.docker.com/reference/cli/docker/buildx/build/#build-arg
      RUNS_ON_LABEL:
        type: string
        default: ubuntu-latest
    secrets:
      DOCKERHUB_USER:
        required: true
        description: Username for company DockerHub account
      DOCKERHUB_PASSWORD:
        required: true
        description: Password for company DockerHub account
    outputs:
      ecr-registry:
        description: ECR registry variable
        value: ${{ jobs.build.outputs.ecr-registry }}

jobs:
  build:
    runs-on: ${{ inputs.RUNS_ON_LABEL }}
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      ecr-registry: ${{ steps.login-ecr.outputs.registry}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # pin@v4.1.0
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_CICD_ACCOUNT }}:role/github-actions"
          aws-region: ${{ vars.AWS_CICD_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # pin@v2.0.1

      - name: Log in to the Dockerhub registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # pin@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # pin@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # pin@v3.10.0

      - name: Extract Buildcache docker metadata
        id: cache-meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # pin@v5.7.0
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/cache
          tags: |
            type=raw,value=${{ inputs.IMAGE_NAME }}

      - name: Extract Release docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # pin@v5.7.0
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.IMAGE_NAME }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # pin@v6.15.0
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ inputs.DOCKER_FILE }}
          push: ${{ inputs.DOCKER_PUSH }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ref=${{ steps.cache-meta.outputs.tags }},type=registry
          cache-to: ${{ github.actor != 'dependabot[bot]' && format('type=registry,ref={0},mode=max,image-manifest=true,oci-mediatypes=true', steps.cache-meta.outputs.tags) || '' }}
          platforms: ${{ inputs.DOCKER_PLATFORMS }}
          build-args: ${{ inputs.DOCKER_BUILD_ARGS }}
